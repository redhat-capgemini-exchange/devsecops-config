kind: ClusterTask
apiVersion: tekton.dev/v1beta1
metadata:
  name: git-log-to-markdown
spec:
  description: >-
    Export log commits grouped by day to markdown file (optionally filtered by author and set start/end date)/config/app.config

    Adapted 
  params:
    - name: GIT_BRANCH_REF
      type: string
      description: "The GitHub ref from the webhook payload (property body.ref)"
  results:
    - description: "The GitHub branch the webhook was call originated from e.g. 'main'"
      name: GIT_BRANCH
  steps:
    - name: git-log-to-markdown
      image: image-registry.openshift-image-registry.svc:5000/openshift/gitops-cli:1.0.0
      workingDir: $(workspaces.manifest.path)
      script: |
        #!/usr/bin/env bash

        # Generates git log grouped by day and outputs to markdown file
        #
        # optional parameters
        # -a, --author       to filter by author
        # -s, --since        to select start date
        # -u, --until        to select end date

        git-log-to-markdown () {
          local NEXT=$(date +%F)

          local RED="\x1B[31m"
          local YELLOW="\x1B[32m"
          local BLUE="\x1B[34m"
          local RESET="\x1B[0m"

          local SINCE="1970-01-01"
          local UNTIL=$NEXT


          for i in "$@"
          do
          case $i in
            -a=*|--author=*)
            local AUTHOR="${i#*=}"
            shift
            ;;
            -s=*|--since=*)
            SINCE="${i#*=}"
            shift
            ;;
            -u=*|--until=*)
            UNTIL="${i#*=}"
            shift
            ;;
            *)
              # unknown option
            ;;
          esac
          done

          local LOG_FORMAT=" %Cgreen*%Creset %s"
          
          if [ -z "$AUTHOR" ]
          then
            LOG_FORMAT="$LOG_FORMAT %Cblue(%an)%Creset"
          else
            echo "# Gitlog"
          fi

          git log --no-merges --author="${AUTHOR}" --since="${SINCE}" --until="${UNTIL}" --format="%cd" --date=short | sort -u | while read DATE ; do

            local GIT_PAGER=$(git log --no-merges --reverse --format="${LOG_FORMAT}" --since="${DATE} 00:00:00" --until="${DATE} 23:59:59" --author="${AUTHOR}")

            if [ ! -z "$GIT_PAGER" ]
            then
              echo
              echo -e "## $DATE"
              echo -e "${GIT_PAGER}"
            fi

          done

        }

      volumeMounts:
        - mountPath: /gen-source
          name: gen-source

  workspaces:
    - mountPath: /workspace/manifest
      name: manifest
  volumes:
    - emptyDir: {}
      name: gen-source